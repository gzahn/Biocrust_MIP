geom_smooth(se=FALSE,linewidth=2,alpha=.75,aes(linetype=group)) +
scale_color_manual(values=c("gray20",pal$pal.earthtones)) +
# facet_wrap(~group) +
labs(y="f(pH)",x="pH",color="Treatment") +
scale_linetype_manual(values = c(21,1,1,1)) + guides(linetype = "none")
p6 <- isplines %>%
ggplot(aes(x=Mg_actual,y=Mg_partial,color=group)) +
# geom_vline(xintercept = 100,linetype=2,color='gray') +
geom_smooth(se=FALSE,linewidth=2,alpha=.75,aes(linetype=group)) +
scale_color_manual(values=c("gray20",pal$pal.earthtones)) +
# facet_wrap(~group) +
labs(y="f(Mg)",x="Mg",color="Treatment") +
scale_linetype_manual(values = c(21,1,1,1)) + guides(linetype = "none")
p7 <- isplines %>%
ggplot(aes(x=Fe_actual,y=Fe_partial,color=group)) +
# geom_vline(xintercept = 100,linetype=2,color='gray') +
geom_smooth(se=FALSE,linewidth=2,alpha=.75,aes(linetype=group)) +
scale_color_manual(values=c("gray20",pal$pal.earthtones)) +
# facet_wrap(~group) +
labs(y="f(Fe)",x="Fe",color="Treatment") +
scale_linetype_manual(values = c(21,1,1,1)) + guides(linetype = "none")
(p2 | p3) / (p4 | p5) / (p6 | p7) + plot_layout(guides='collect')
ggsave("./output/figs/GDM_splines_plots_soilvars.png",dpi=400,height = 8,width = 12)
## Packages
library(readxl)
library(tidyverse)
## Functions ####
source("./R/functions.R")
## Metadata ####
dat <- read_xlsx("./data/full_metadata.xlsx")
## Variables ####
dl_path_18S <- "./data/seq/18S"
accessions_18S <- dat$sra_accession
fwd_filenames_18S <- file.path(dl_path_18S,dat$fwd_name)
rev_filenames_18S <- file.path(dl_path_18S,dat$rev_name)
dl_filenames_fwd <- paste0(accessions_18S,"_1.fastq")
dl_filenames_rev <- paste0(accessions_18S,"_2.fastq")
accessions_18S
accessions_18S[1]
i=1
system2("fasterq-dump",args = accessions_18S[i])
system2("fasterq-dump")
# Download from SRA ####
system("fasterq-dump")
# Download from SRA ####
system2("fasterq-dump")
# Download from SRA ####
system("fasterq-dump")
# Download from SRA ####
system2("fasterq-dump")
# Download from SRA ####
system2("fasterq-dump")
system("fasterq-dump")
system("ls")
system("/home/gzahn/Programs/sratoolkit.3.1.1-ubuntu64/bin/fasterq-dump")
system2("/home/gzahn/Programs/sratoolkit.3.1.1-ubuntu64/bin/fasterq-dump")
system2("fasterq-dump")
system2("which",args = "fasterq-dump")
# Download from SRA ####
system("which fasterq-dump")
# Download from SRA ####
system("which ls")
system2("which",args = "ls")
fasterq_dump <- "/home/gzahn/Programs/sratoolkit.3.1.1-ubuntu64/bin/fasterq-dump"
i
system2(fasterq_dump,args = accessions_18S[i])
dat$bioproject_accession...98
ps@sam_data$ca
data.frame(
ca=ps@sam_data$ca,
treatment=ps@sam_data$invasion
)
data.frame(
ca=ps@sam_data$ca,
treatment=ps@sam_data$invasion
) %>%
ggplot(aes(x=treatment,y=ca)) +
geom_boxplot()
# SETUP ####
# packages
library(tidyverse)
library(phyloseq)
library(vegan)
library(lmerTest)
library(corncob)
library(patchwork)
library(broom)
library(gdm)
# functions
source("./R/functions.R")
# variables
set.seed(666)
# theme
theme_set(theme_bw() +
theme(strip.text = element_text(face='bold',size=14),
legend.title = element_text(face='bold',size=14),
axis.title = element_text(face='bold',size=14),
axis.text = element_text(face='bold',size=10)
)
)
# data
ps <- readRDS("./data/physeq_18S_clean.RDS")
# "OTU Table matrix"
mat <-
ps %>%
transform_sample_counts(ra) %>%
otu_table() %>%
as('matrix')
data.frame(
om=ps@sam_data$om,
treatment=ps@sam_data$invasion
) %>%
ggplot(aes(x=treatment,y=ca)) +
geom_boxplot()
data.frame(
om=ps@sam_data$om,
treatment=ps@sam_data$invasion
) %>%
ggplot(aes(x=treatment,y=om)) +
geom_boxplot()
#SETUP ####
library(tidyverse)
library(janitor)
library(DESeq2) # https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
# functions
read_stats <- function(x){
sampleid <- x %>% basename() %>% str_remove("_scafstats.txt|_refstats.txt")
dat <- read_delim(x) %>% clean_names() %>% mutate(sample_id=sampleid)
names(dat)[1] <- "full_name"
dat <-
dat %>%
mutate(uniprot_id = full_name %>% str_split("\\|") %>% map_chr(1),
predicted_gene = full_name %>% str_split("\\|") %>% map_chr(2)) %>%
dplyr::select(sample_id, predicted_gene, uniprot_id, unambiguous_reads)
return(dat)
}
read_annot <- function(x){
dat <- read_delim(x,delim = "\t",skip = 1,col_names = FALSE)
sampleid <- x %>% basename() %>% str_remove("_annotation_table.tsv")
header <- readLines(x)[1] %>%
str_squish() %>%
str_split("\\s") %>%
unlist()
colnames(dat) <- header
dat$sample_id=sampleid
return(dat)
}
# file paths
path <- "~/Desktop/Mangrove_Annotations"
# scaffold stats
scafstats_fp <- list.files(path,full.names = TRUE, pattern = "scafstats.txt")
# reference stats (overall for that file, might be handy)
refstats_fp <- list.files(path,full.names = TRUE, pattern = "refstats.txt")
# annotation tables
annot_fp <- list.files(path,full.names = TRUE, pattern = "annotation_table.tsv")
# sample names
sample_names <- basename(annot_fp) %>% str_remove("_annotation_table.tsv")
# subset to remove scafstats files that have no corresponding annotation file
scafstats_fp <- grep(x = scafstats_fp,pattern = paste(sample_names,collapse = "|"),value = TRUE)
# read in delim files
scafstats <- map(scafstats_fp,read_stats)
refstats <- map(refstats_fp,read_delim) %>% purrr::reduce(full_join) %>% clean_names()
View(refstats)
names(scafstats) <- sample_names
annotations <- map(annot_fp,read_annot)
# stick them all together
dat <-
full_join(
purrr::reduce(scafstats,full_join),
purrr::reduce(annotations,full_join)
)
View(dat)
# build gene_metadata
uniprot_meta <-
dat %>%
dplyr::select(uniprot_id,ko_id,ko_description,pfam_id,pfam_description,go_term) %>%
unique.data.frame()
# build sample metadata
sample_meta <-
data.frame(
sample_id = dat$sample_id %>% unique
) %>%
mutate(location = sample_id %>%
str_split("_") %>%
map_chr(1),
location = case_when(location == "CJ" ~ "Chek Jawa",
location == "Sem" ~ "Semaku"),
plant_part = sample_id %>%
str_split("_") %>% map_chr(2),
plant_part = case_when(plant_part == "L" ~ "Leaf",
plant_part == "Pn" ~ "Pneumatophore",
plant_part == "Sed" ~ "Sediment"),
replicate = sample_id %>%
str_split("_") %>% map_chr(3))
# build count table (full)
count_tab <-
dat %>%
dplyr::select(sample_id, uniprot_id, unambiguous_reads) %>%
distinct(sample_id,uniprot_id, .keep_all = TRUE) %>%
pivot_wider(
names_from = sample_id,
values_from = unambiguous_reads)
# remove uniprot_ids that had no unambiguous mappings?
count_tab[count_tab %>%
dplyr::select(-uniprot_id) %>%
rowSums(na.rm = TRUE) > 0,]
# remove uniprot_ids that had no unambiguous mappings?
count_tab <-
count_tab[count_tab %>%
dplyr::select(-uniprot_id) %>%
rowSums(na.rm = TRUE) > 0,]
# convert to matrix
mat <-
count_tab %>%
dplyr::select(-uniprot_id) %>%
as.matrix
row.names(mat) <- count_tab$uniprot_id
# Convert NA to 0
mat[is.na(mat)] <- 0
# check order of input data
identical(
colnames(mat),
sample_meta$sample_id
)
saveRDS(mat,"./count_table.RDS")
saveRDS(sample_meta,"./sample_meta.RDS")
# SETUP ####
# packages
library(tidyverse)
library(phyloseq)
library(vegan)
library(lmerTest)
library(corncob)
library(patchwork)
library(broom)
library(gdm)
# functions
source("./R/functions.R")
# variables
set.seed(666)
# theme
theme_set(theme_bw() +
theme(strip.text = element_text(face='bold',size=14),
legend.title = element_text(face='bold',size=14),
axis.title = element_text(face='bold',size=14),
axis.text = element_text(face='bold',size=10)
)
)
# data
ps <- readRDS("./data/physeq_18S_clean.RDS")
# "OTU Table matrix"
mat <-
ps %>%
transform_sample_counts(ra) %>%
otu_table() %>%
as('matrix')
# ORDINATIONS ####
ord <-
ps %>%
transform_sample_counts(ra) %>%
ordinate(method = "NMDS",distance = 'bray')
plot_ordination(ps,ord,color='site') +
stat_ellipse()
plot_ordination(ps,ord,color='invasion') +
stat_ellipse()
plot_ordination(ps,ord,color='crust') +
stat_ellipse()
plot_ordination(ps,ord,color='invasion') +
stat_ellipse() +
facet_wrap(~site,scales = 'free') +
theme()
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values = pal$pal.earthtones) +
labs(color="Invasion\nstatus")
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus")
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values=c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus")
ggsave("./output/figs/18S_NMDS_Plot_site_by_invasion.png", height = 8,width = 10)
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values=c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus") + theme_bw()
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values=c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus") + theme_minimal()
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values=c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus")
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
ggplot(aes(x=MDS1,y=MDS2,color=invasion)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values=c("#810F7C","#8856A7","gray")) +
labs(color="Invasion\nstatus") +
theme(strip.background = element_blank())
ggsave("./output/figs/18S_NMDS_Plot_site_by_invasion.png", height = 8,width = 10)
# SETUP ####
# packages
library(tidyverse)
library(phyloseq)
library(vegan)
library(lmerTest)
library(corncob)
library(patchwork)
# functions
source("./R/functions.R")
# theme
theme_set(theme_minimal() +
theme(strip.text = element_text(face='bold',size=14),
legend.title = element_text(face='bold',size=14)
)
)
# data
ps <- readRDS("./data/physeq_18S_clean.RDS")
# RARECURVE ####
mat <- otu_table(ps) %>% as('matrix')
png("./output/figs/18S_rarefaction_curve.png")
rarecurve(mat,step = 100,label = FALSE)
dev.off()
# SIMPLE ALPHA DIV ####
ps@sam_data$asv_richness <-
ps %>%
estimate_richness(measures = c("Observed")) %>%
pluck("Observed")
ps %>%
plot_richness(color='invasion',measures = "Observed",x = 'invasion') +
geom_boxplot(alpha=.5) +
facet_wrap(~site,scales = 'free_x') +
labs(y="ASV richness",x="",color="Invasion\nstatus") +
scale_color_manual(values = pal$pal.earthtones) +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(face='bold',size=10),
axis.title.y = element_text(face='bold',size=14))
ggsave("./output/figs/18S_ASV_Richness_Boxplot_by_site-invasion.png")
# look at just transition plots (and plant types in them)
ps %>%
subset_samples(invasion == "Transition") %>%
plot_richness(color='plant',measures = "Observed",x = 'invasion') +
geom_boxplot(alpha=.5) +
facet_wrap(~site,scales = 'free_x') +
labs(y="ASV richness",x="",color="Plant") +
scale_color_manual(values = pal$pal.earthtones) +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(face='bold',size=10),
axis.title.y = element_text(face='bold',size=14))
ggsave("./output/figs/18S_ASV_Richness_Boxplot_Transition_by_plant.png")
# TAX GLOM ####
ps_spp <-
ps %>%
tax_glom("Species",NArm = FALSE,
bad_empty = c("unclassified","", " ", "\t","sp.",NA))
# change NA to 'unclassified' at genus level
ps_spp@tax_table[,6][is.na(ps_spp@tax_table[,6])] <- "unclassified"
# species richness
ps_spp@sam_data$species_richness <-
ps_spp %>%
estimate_richness(measures = "Observed") %>%
pluck("Observed")
# melt for plotting and modeling
dat <-
ps_spp %>%
transform_sample_counts(ra) %>%
psmelt() %>%
dplyr::rename("relative_abundance" = "Abundance")
# PLOT & MODEL "SPECIES" RICHNESS ####
# site, invasion, crust
dat %>%
ggplot(aes(x=crust,y=asv_richness,fill=invasion)) +
geom_boxplot() +
facet_wrap(~site,scales = 'free') +
scale_fill_manual(values=pal$pal.earthtones) +
labs(fill="Invasion\nstatus",y="ASV richness")
ggsave("./output/figs/18S_ASV_Richness_Boxplot.png")
dat %>%
ggplot(aes(x=crust,y=species_richness,fill=invasion)) +
geom_boxplot() +
facet_wrap(~site,scales = 'free') +
scale_fill_manual(values=pal$pal.earthtones) +
labs(fill="Invasion\nstatus",y="Species richness")
ggsave("./output/figs/18S_Species_Richness_Boxplot.png")
# boxplot to match Rae's figure 2
dat %>%
ggplot(aes(x=invasion,y=species_richness,color=crust,fill=crust)) +
geom_boxplot(alpha=.5) +
# facet_wrap(~invasion,scales = 'free_x') +
labs(y="Species richness",x="",color="Biocrust",fill="Biocrust") +
scale_color_manual(values = pal$pal.okabe) +
scale_fill_manual(values = pal$pal.okabe) +
theme(axis.text.x = element_text(face='bold',angle=0,size=14,hjust=.5),
axis.text.y = element_text(face='bold',size=10),
axis.title.y = element_text(face='bold',size=14),
plot.title = element_blank(),
strip.text = element_blank(),
legend.text = element_text(face='bold',size=12),
legend.title = element_text(face='bold',size=14))
ggsave("./output/figs/18S_Species_Richness_Boxplot_by_Crust_and_Invasion.png",height = 8,width = 8)
dat %>%
lmer(data=.,formula=species_richness ~ invasion * crust + (1|site)) %>%
summary
m <- dat %>%
lmer(data=.,formula=species_richness ~ invasion * crust + (1|site)) %>%
summary
install.packages("equatiomatic")
equatiomatic::extract_eq(m)
m <- dat %>%
lme4::lmer(data=.,formula=species_richness ~ invasion * crust + (1|site)) %>%
summary
equatiomatic::extract_eq(m)
m <- dat %>%
lme4::lmer(data=.,formula=species_richness ~ invasion * crust + (1|site))
equatiomatic::extract_eq(m)
equatiomatic::extract_eq(m,wrap = TRUE)
m <- dat %>%
lmer(data=.,formula=species_richness ~ invasion * crust + (1|site))
equatiomatic::extract_eq(m,wrap = TRUE)
data.frame(site=ps@sam_data$site,
invasion=ps@sam_data$invasion,
crust=ps@sam_data$crust,
plant=ps@sam_data$plant,
MDS1=ord$points[,1],
MDS2=ord$points[,2]) %>%
dplyr::filter(invasion == "Transition") %>%
ggplot(aes(x=MDS1,y=MDS2,color=plant)) +
geom_point(size=3) +
stat_ellipse(linetype=2) +
facet_wrap(~site,scales = 'free') +
scale_color_manual(values = pal$pal.okabe) +
labs(color="Plant",title = "Transition plots only")
# PermANOVA ####
perm.mod <-
adonis2(mat ~ ps@sam_data$invasion * ps@sam_data$crust, strata = ps@sam_data$site) %>%
broom::tidy() %>%
mutate(term=term %>% str_remove_all("ps@sam_data\\$"))
perm.mod
ps2 <- ps %>% otu_table() %>% head
ps2
ps@sam_data$plant
ps@sam_data$invasion
ps2 <- ps %>% subset_samples(invasion == "Transition") %>% transform_sample_counts(ra)
ps2
perm.mod2 <-
adonis2(mat ~ ps@sam_data$plant, strata = ps@sam_data$site) %>%
broom::tidy() %>%
mutate(term=term %>% str_remove_all("ps@sam_data\\$"))
perm.mod2 <-
adonis2(mat ~ ps2@sam_data$plant, strata = ps2@sam_data$site) %>%
broom::tidy() %>%
mutate(term=term %>% str_remove_all("ps2@sam_data\\$"))
ps2 <- ps %>% subset_samples(invasion == "Transition") %>% transform_sample_counts(ra)
mat2 <- ps2 %>% otu_table() %>% as("matrix")
perm.mod2 <-
adonis2(mat2 ~ ps2@sam_data$plant, strata = ps2@sam_data$site) %>%
broom::tidy() %>%
mutate(term=term %>% str_remove_all("ps2@sam_data\\$"))
perm.mod2
perm.mod2 %>%
write_csv("./output/18S_PermANOVA_Table_plant.csv")
